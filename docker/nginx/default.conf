# HTTP Server - Redirect to HTTPS in production
# For local development, remove the redirect block
server {
    listen 80;
    listen [::]:80;
    server_name mhrhci.mhrpci.site www.mhrhci.mhrpci.site;

    # Allow local development access
    set $redirect_to_https 0;
    if ($host ~* ^(mhrhci\.mhrpci\.site|www\.mhrhci\.mhrpci\.site)$) {
        set $redirect_to_https 1;
    }

    # Redirect to HTTPS for production domains
    if ($redirect_to_https = 1) {
        return 301 https://$host$request_uri;
    }

    # Local development fallback (localhost)
    root /var/www/html/public;
    index index.php index.html index.htm;
    charset utf-8;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param HTTP_X_FORWARDED_PROTO $http_x_forwarded_proto;
        fastcgi_param HTTP_X_FORWARDED_HOST  $http_x_forwarded_host;
        fastcgi_param HTTP_X_FORWARDED_PORT  $http_x_forwarded_port;
        fastcgi_param HTTP_X_FORWARDED_FOR   $proxy_add_x_forwarded_for;
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    client_max_body_size 100M;
}

# HTTPS Server - Production
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name mhrhci.mhrpci.site www.mhrhci.mhrpci.site;
    root /var/www/html/public;

    index index.php index.html index.htm;
    charset utf-8;

    # SSL Configuration
    # Note: Replace these paths with your actual SSL certificate paths
    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    # If using Cloudflare Origin Certificate, use Cloudflare's certificates
    # ssl_certificate /etc/ssl/cloudflare/cert.pem;
    # ssl_certificate_key /etc/ssl/cloudflare/key.pem;

    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Cloudflare Real IP (if behind Cloudflare)
    # Uncomment these if using Cloudflare
    # set_real_ip_from 103.21.244.0/22;
    # set_real_ip_from 103.22.200.0/22;
    # set_real_ip_from 103.31.4.0/22;
    # set_real_ip_from 104.16.0.0/13;
    # set_real_ip_from 104.24.0.0/14;
    # set_real_ip_from 108.162.192.0/18;
    # set_real_ip_from 131.0.72.0/22;
    # set_real_ip_from 141.101.64.0/18;
    # set_real_ip_from 162.158.0.0/15;
    # set_real_ip_from 172.64.0.0/13;
    # set_real_ip_from 173.245.48.0/20;
    # set_real_ip_from 188.114.96.0/20;
    # set_real_ip_from 190.93.240.0/20;
    # set_real_ip_from 197.234.240.0/22;
    # set_real_ip_from 198.41.128.0/17;
    # set_real_ip_from 2400:cb00::/32;
    # set_real_ip_from 2606:4700::/32;
    # set_real_ip_from 2803:f800::/32;
    # set_real_ip_from 2405:b500::/32;
    # set_real_ip_from 2405:8100::/32;
    # set_real_ip_from 2c0f:f248::/32;
    # set_real_ip_from 2a06:98c0::/29;
    # real_ip_header CF-Connecting-IP;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        
        # Forward proxy headers from Cloudflare to PHP so Laravel can trust HTTPS
        fastcgi_param HTTPS on;
        fastcgi_param HTTP_X_FORWARDED_PROTO https;
        fastcgi_param HTTP_X_FORWARDED_HOST  $host;
        fastcgi_param HTTP_X_FORWARDED_PORT  443;
        fastcgi_param HTTP_X_FORWARDED_FOR   $proxy_add_x_forwarded_for;
        
        include fastcgi_params;
        fastcgi_hide_header X-Powered-By;
        
        # Security settings
        fastcgi_buffer_size 128k;
        fastcgi_buffers 256 16k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_read_timeout 300;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    # Cache static assets with proper headers
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Deny access to sensitive files
    location ~ /\.(git|env|htaccess) {
        deny all;
    }

    # Max upload size
    client_max_body_size 100M;
    client_body_buffer_size 128k;
    client_body_timeout 60s;
}
